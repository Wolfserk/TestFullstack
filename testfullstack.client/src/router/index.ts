import { createRouter, createWebHistory } from 'vue-router';

import Home from '../views/HomeView.vue';
import Register from '../views/RegisterView.vue';
import Orders from '../views/OrdersView.vue';
import Cart from '../views/CartView.vue';

import ManagerDashboard from "../views/admin/ManagerDashboard.vue";
import Users from "../views/admin/UsersView.vue";
import Items from "../views/admin/ItemsView.vue";
import AllOrders from "../views/admin/AllOrdersView.vue";
import Customers from "../views/admin/CustomersView.vue";

import { useUserStore } from "../stores/user"; 



const routes = [
  { path: '/', component: Home },
  { path: '/register', component: Register, meta: { requiresGuest: true } },
  { path: '/cart', component: Cart, meta: { requiresAuth: true, requiresCustomer: true } },
  { path: '/orders', component: Orders, meta: { requiresAuth: true, requiresCustomer: true } },


  { path: '/admin', component: ManagerDashboard, meta: { requiresManager: true } },
  { path: '/admin/users', component: Users, meta: { requiresManager: true } },
  { path: '/admin/items', component: Items, meta: { requiresManager: true } },
  { path: '/admin/orders', component: AllOrders, meta: { requiresManager: true } },
  { path: '/admin/customers', component: Customers, meta: { requiresManager: true } }
];

const router = createRouter({
  history: createWebHistory(),
  routes,
});

router.beforeEach((to, from, next) => {
  const userStore = useUserStore();
  const userRole = userStore.role || localStorage.getItem("userRole");
  const isAuthenticated = userStore.isAuthenticated;


  if (to.meta.requiresGuest) {
    if (isAuthenticated) {
      alert("–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.");
      next({ path: "/" }); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    } else {
      next(); // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø
    }
    return;
  }

  // üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–ª—å "Manager"
  if (to.meta.requiresManager) {
    if (!isAuthenticated) {
      alert("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.");
      next({ path: "/" });
    } else if (userRole !== "Manager") {
      alert("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.");
      next("/");
    } else {
      next();
    }
    return;
  }

  // üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–ª—å "Customer"
  if (to.meta.requiresCustomer) {
    if (!isAuthenticated) {
      alert("–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.");
      next({ path: "/" });
    } else if (userRole !== "Customer") {
      alert("–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∑–∞–∫–∞–∑—á–∏–∫–∞–º.");
      next("/");
    } else {
      next();
    }
    return;
  }

  next();
});


export default router;
